const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

const SMS_TEMPLATES = [
  // Cat√©gorie: Bienvenue
  {
    name: "Bienvenue - Nouveau Client",
    category: "bienvenue",
    channel: "sms",
    content: "üéâ Bienvenue chez [COMPANY] ! Votre compte est activ√©. Profitez de -15% avec le code BIENVENUE15 sur votre premi√®re commande. Valable 30 jours.",
    isSystem: true,
    tags: JSON.stringify(["bienvenue", "nouveau", "client", "inscription"]),
    variables: JSON.stringify(["COMPANY", "PRENOM", "NOM"]),
    promoCode: "BIENVENUE15",
    promoValue: "15%",
    promoExpiry: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000) // 30 jours
  },
  {
    name: "Bienvenue - Programme VIP",
    category: "bienvenue",
    channel: "sms",
    content: "‚ú® F√©licitations [PRENOM] ! Vous √™tes maintenant membre VIP. Profitez de -25% avec VIP25 + livraison gratuite. Bienvenue dans l'√©lite !",
    isSystem: true,
    tags: JSON.stringify(["bienvenue", "vip", "programme", "fid√©lit√©"]),
    variables: JSON.stringify(["PRENOM", "NOM", "COMPANY"]),
    promoCode: "VIP25",
    promoValue: "25%",
    promoExpiry: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000) // 60 jours
  },

  // Cat√©gorie: Promotions
  {
    name: "Flash Sale - 24h",
    category: "promotion",
    channel: "sms",
    content: "‚ö° FLASH SALE ! -50% sur TOUT pendant 24h seulement ! Code: FLASH50 üî• D√©p√™chez-vous sur [WEBSITE] Fin √† minuit !",
    isSystem: true,
    tags: JSON.stringify(["promotion", "flash", "urgent", "limite"]),
    variables: JSON.stringify(["WEBSITE", "COMPANY"]),
    promoCode: "FLASH50",
    promoValue: "50%",
    promoExpiry: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000) // 24h
  },
  {
    name: "Week-end Sp√©cial",
    category: "promotion",
    channel: "sms",
    content: "üéâ Week-end EXCEPTIONNEL ! -30% avec WEEKEND30 + livraison express gratuite. Valable jusqu'√† dimanche 23h59. Ne ratez pas √ßa !",
    isSystem: true,
    tags: JSON.stringify(["promotion", "weekend", "livraison"]),
    variables: JSON.stringify(["PRENOM", "COMPANY"]),
    promoCode: "WEEKEND30",
    promoValue: "30%",
    promoExpiry: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000) // 3 jours
  },
  {
    name: "Soldes d'√©t√©",
    category: "promotion",
    channel: "sms",
    content: "‚òÄÔ∏è SOLDES D'√âT√â ! Jusqu'√† -70% sur toute la collection √©t√© ! Code: SOLDES70 Livraison gratuite d√®s 50‚Ç¨. C'est parti !",
    isSystem: true,
    tags: JSON.stringify(["soldes", "√©t√©", "collection", "livraison"]),
    variables: JSON.stringify(["PRENOM", "COMPANY"]),
    promoCode: "SOLDES70",
    promoValue: "70%",
    promoExpiry: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000) // 30 jours
  },

  // Cat√©gorie: Anniversaire
  {
    name: "Bon anniversaire - Cadeau",
    category: "anniversaire",
    channel: "sms",
    content: "üéÇ Joyeux anniversaire [PRENOM] ! üéÅ Votre cadeau vous attend : -20% avec ANNIV20 + un petit cadeau surprise. Profitez-en vite !",
    isSystem: true,
    tags: JSON.stringify(["anniversaire", "cadeau", "personnel"]),
    variables: JSON.stringify(["PRENOM", "NOM", "AGE"]),
    promoCode: "ANNIV20",
    promoValue: "20%",
    promoExpiry: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000) // 7 jours
  },
  {
    name: "Anniversaire VIP",
    category: "anniversaire",
    channel: "sms",
    content: "üåü Bon anniversaire [PRENOM] ! En tant que membre VIP, profitez de -40% avec VIPANNIV40 + livraison premium offerte. Bon anniversaire !",
    isSystem: true,
    tags: JSON.stringify(["anniversaire", "vip", "premium"]),
    variables: JSON.stringify(["PRENOM", "NOM", "AGE"]),
    promoCode: "VIPANNIV40",
    promoValue: "40%",
    promoExpiry: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000) // 14 jours
  },

  // Cat√©gorie: Fid√©lisation
  {
    name: "Merci fid√©lit√©",
    category: "fidelisation",
    channel: "sms",
    content: "üíé Merci pour votre fid√©lit√© [PRENOM] ! Voici votre r√©compense : -25% avec FIDELE25 + points doubl√©s sur votre prochaine commande.",
    isSystem: true,
    tags: JSON.stringify(["fid√©lit√©", "remerciement", "points"]),
    variables: JSON.stringify(["PRENOM", "NOM", "POINTS"]),
    promoCode: "FIDELE25",
    promoValue: "25%",
    promoExpiry: new Date(Date.now() + 21 * 24 * 60 * 60 * 1000) // 21 jours
  },
  {
    name: "Retour client",
    category: "fidelisation",
    channel: "sms",
    content: "üíï √áa nous a manqu√© [PRENOM] ! Revenez avec -30% sur votre commande de retour : RETOUR30. Nous avons plein de nouveaut√©s !",
    isSystem: true,
    tags: JSON.stringify(["retour", "r√©activation", "nouveaut√©s"]),
    variables: JSON.stringify(["PRENOM", "NOM", "DERNIERE_COMMANDE"]),
    promoCode: "RETOUR30",
    promoValue: "30%",
    promoExpiry: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000) // 15 jours
  },

  // Cat√©gorie: √âv√©nements
  {
    name: "Saint-Valentin",
    category: "evenement",
    channel: "sms",
    content: "üíï Saint-Valentin : L'amour est dans l'air ! -35% sur tous nos cadeaux avec LOVE35. Livraison gratuite pour faire plaisir !",
    isSystem: true,
    tags: JSON.stringify(["saint-valentin", "amour", "cadeaux"]),
    variables: JSON.stringify(["PRENOM", "PARTENAIRE"]),
    promoCode: "LOVE35",
    promoValue: "35%",
    promoExpiry: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000) // 7 jours
  },
  {
    name: "Black Friday",
    category: "evenement",
    channel: "sms",
    content: "üñ§ BLACK FRIDAY ! Notre plus grosse promo : -60% sur TOUT avec BLACK60 ! Stock limit√©, ne tardez pas ! Lien : [WEBSITE]",
    isSystem: true,
    tags: JSON.stringify(["black-friday", "m√©ga-promo", "stock"]),
    variables: JSON.stringify(["WEBSITE", "PRENOM"]),
    promoCode: "BLACK60",
    promoValue: "60%",
    promoExpiry: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000) // 3 jours
  },
  {
    name: "F√™te des M√®res",
    category: "evenement",
    channel: "sms",
    content: "üå∏ F√™te des M√®res : G√¢tez maman ! -25% sur notre s√©lection sp√©ciale avec MAMAN25. Livraison express disponible jusqu'au [DATE].",
    isSystem: true,
    tags: JSON.stringify(["f√™te-des-m√®res", "maman", "express"]),
    variables: JSON.stringify(["PRENOM", "DATE", "SELECTION"]),
    promoCode: "MAMAN25",
    promoValue: "25%",
    promoExpiry: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000) // 10 jours
  },

  // Cat√©gorie: Abandon panier
  {
    name: "Panier abandonn√© - 1√®re relance",
    category: "abandon_panier",
    channel: "sms",
    content: "üõí Oups ! Vous avez oubli√© quelque chose dans votre panier. Finalisez maintenant avec -10% : PANIER10. Vos articles vous attendent !",
    isSystem: true,
    tags: JSON.stringify(["abandon", "panier", "relance", "premi√®re"]),
    variables: JSON.stringify(["PRENOM", "PRODUITS", "MONTANT"]),
    promoCode: "PANIER10",
    promoValue: "10%",
    promoExpiry: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000) // 3 jours
  },
  {
    name: "Panier abandonn√© - Derni√®re chance",
    category: "abandon_panier",
    channel: "sms",
    content: "‚è∞ DERNI√àRE CHANCE ! Votre panier expire dans 2h. Sauvez-le avec -20% : URGENT20. Ne laissez pas passer cette occasion !",
    isSystem: true,
    tags: JSON.stringify(["abandon", "urgent", "derni√®re", "chance"]),
    variables: JSON.stringify(["PRENOM", "PRODUITS", "MONTANT"]),
    promoCode: "URGENT20",
    promoValue: "20%",
    promoExpiry: new Date(Date.now() + 2 * 60 * 60 * 1000) // 2 heures
  },

  // Cat√©gorie: Confirmation commande
  {
    name: "Commande confirm√©e",
    category: "commande",
    channel: "sms",
    content: "‚úÖ Commande confirm√©e ! N¬∞ [NUMERO_COMMANDE]. Livraison pr√©vue le [DATE_LIVRAISON]. Suivi : [LIEN_SUIVI]. Merci [PRENOM] !",
    isSystem: true,
    tags: JSON.stringify(["confirmation", "commande", "livraison", "suivi"]),
    variables: JSON.stringify(["NUMERO_COMMANDE", "DATE_LIVRAISON", "LIEN_SUIVI", "PRENOM"])
  },
  {
    name: "Exp√©dition confirm√©e",
    category: "commande",
    channel: "sms",
    content: "üì¶ C'est parti ! Votre commande [NUMERO_COMMANDE] a √©t√© exp√©di√©e. Livraison demain avant 18h. Suivi : [LIEN_SUIVI]",
    isSystem: true,
    tags: JSON.stringify(["exp√©dition", "livraison", "suivi"]),
    variables: JSON.stringify(["NUMERO_COMMANDE", "LIEN_SUIVI", "TRANSPORTEUR"])
  },

  // Cat√©gorie: Service client
  {
    name: "Support disponible",
    category: "service_client",
    channel: "sms",
    content: "üÜò Besoin d'aide [PRENOM] ? Notre √©quipe est l√† ! R√©pondez HELP ou appelez le [TELEPHONE]. Nous sommes √† votre service 7j/7.",
    isSystem: true,
    tags: JSON.stringify(["support", "aide", "√©quipe", "service"]),
    variables: JSON.stringify(["PRENOM", "TELEPHONE", "EMAIL_SUPPORT"])
  },
  {
    name: "Satisfaction client",
    category: "service_client",
    channel: "sms",
    content: "‚≠ê Comment s'est pass√©e votre commande [PRENOM] ? Notez-nous en 30s : [LIEN_AVIS]. Votre avis compte et nous aide √† nous am√©liorer !",
    isSystem: true,
    tags: JSON.stringify(["satisfaction", "avis", "√©valuation"]),
    variables: JSON.stringify(["PRENOM", "LIEN_AVIS", "NUMERO_COMMANDE"])
  }
];

async function initializeSMSTemplates() {
  try {
    console.log('üöÄ Initialisation des templates SMS...');

    // R√©cup√©rer toutes les organisations
    const organizations = await prisma.organization.findMany();
    
    if (organizations.length === 0) {
      console.log('‚ùå Aucune organisation trouv√©e. Cr√©ez d\'abord une organisation.');
      return;
    }

    let totalCreated = 0;

    for (const org of organizations) {
      console.log(`\nüìä Organisation: ${org.name} (${org.id})`);
      
      // V√©rifier les templates existants pour cette organisation
      const existingTemplates = await prisma.template.findMany({
        where: { organizationId: org.id }
      });

      console.log(`   Templates existants: ${existingTemplates.length}`);

      for (const template of SMS_TEMPLATES) {
        // V√©rifier si le template existe d√©j√†
        const exists = existingTemplates.find(
          t => t.name === template.name && t.category === template.category
        );

        if (!exists) {
          await prisma.template.create({
            data: {
              ...template,
              organizationId: org.id
            }
          });
          totalCreated++;
          console.log(`   ‚úÖ Cr√©√©: ${template.name}`);
        } else {
          console.log(`   ‚è≠Ô∏è  Existe: ${template.name}`);
        }
      }
    }

    console.log(`\nüéâ Initialisation termin√©e !`);
    console.log(`üìà Templates cr√©√©s: ${totalCreated}`);
    console.log(`üìÇ Cat√©gories disponibles: bienvenue, promotion, anniversaire, fidelisation, evenement, abandon_panier, commande, service_client`);

    // Afficher un r√©sum√© par cat√©gorie
    console.log('\nüìã R√©sum√© par cat√©gorie:');
    const templatesByCategory = SMS_TEMPLATES.reduce((acc, template) => {
      acc[template.category] = (acc[template.category] || 0) + 1;
      return acc;
    }, {});

    Object.entries(templatesByCategory).forEach(([category, count]) => {
      console.log(`   ${category}: ${count} templates`);
    });

  } catch (error) {
    console.error('‚ùå Erreur lors de l\'initialisation:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ex√©cuter le script
if (require.main === module) {
  initializeSMSTemplates();
}

module.exports = { initializeSMSTemplates, SMS_TEMPLATES };
